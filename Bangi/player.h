/*
   Copyright (C) 2016 Ignacio Vina (@igvina)

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

#pragma once

#define PLAYER_WIDTH  12
#define PLAYER_HEIGHT 18

const unsigned char PROGMEM PLAYER_BITMAP[] = //12,18
{
  0x00, 0x18, 0xff, 0x8e, 0x8c, 0x8c, 0x8c, 0x8c,
  0x8e, 0xff, 0x18, 0x00, 0x08, 0x84, 0x42, 0x7e,
  0xd1, 0x10, 0x10, 0xd1, 0x7e, 0x42, 0x84, 0x18,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x00,
};

const unsigned char PROGMEM PLAYER_MASK_BITMAP[] = //12,18
{
  0x00, 0x18, 0xff, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc,
  0xfe, 0xff, 0x18, 0x00, 0x08, 0x84, 0xc2, 0xfe,
  0xdf, 0x1f, 0x1f, 0xdf, 0xfe, 0xc2, 0x84, 0x18,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x00,
};

const unsigned char PROGMEM PLAYER_SHOT_BITMAP[] = //12,18
{
  0x00, 0x18, 0xff, 0x8e, 0x8c, 0x8c, 0x8c, 0x8c,
  0x8e, 0xff, 0x18, 0x00, 0x00, 0x80, 0x40, 0x7e,
  0xd1, 0x10, 0x10, 0xd1, 0x7e, 0x40, 0x80, 0x00,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x00,
};

const unsigned char PROGMEM PLAYER_SHOT_MASK_BITMAP[] = //12,18
{
  0x00, 0x18, 0xff, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc,
  0xfe, 0xff, 0x18, 0x00, 0x00, 0x80, 0xc0, 0xfe,
  0xdf, 0x1f, 0x1f, 0xdf, 0xfe, 0xc0, 0x80, 0x00,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x00,
};

const unsigned char PROGMEM PLAYER_HAPPY_BITMAP[] = //12,18
{
  0xc0, 0x18, 0xff, 0x8e, 0xac, 0x8c, 0x8c, 0xac,
  0x8e, 0xff, 0x18, 0xc0, 0x01, 0x82, 0x42, 0x7e,
  0xd1, 0x10, 0x10, 0xd1, 0x7e, 0x42, 0x82, 0x01,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x00,
};

const unsigned char PROGMEM PLAYER_HAPPY_MASK_BITMAP[] = //12,18
{
  0xc0, 0x18, 0xff, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc,
  0xfe, 0xff, 0x18, 0xc0, 0x01, 0x82, 0xc2, 0xfe,
  0xdf, 0x1f, 0x1f, 0xdf, 0xfe, 0xc2, 0x82, 0x01,
  0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01,
  0x01, 0x01, 0x01, 0x00,
};

// ex. 2 frames (changes every 10 pix)
const int NUMBER_FRAMES =  2;
const int FRAME_CHANGE  = 10;

const unsigned char PROGMEM PLAYER_RIGHT_BITMAP[][36] = //12,18
{{
    0x00, 0x00, 0x18, 0xff, 0x8e, 0xac, 0x8c, 0xac,
    0x8e, 0xff, 0x18, 0x00, 0x00, 0x00, 0xdc, 0x7e,
    0x51, 0x90, 0x10, 0xd1, 0x7e, 0x42, 0x84, 0x08,
    0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01,
    0x01, 0x01, 0x01, 0x00,
  },
  {
    0x00, 0x00, 0x18, 0xff, 0x8e, 0xac, 0x8c, 0xac,
    0x8e, 0xff, 0x18, 0x00, 0xcc, 0x42, 0xc2, 0x5e,
    0x71, 0x10, 0x10, 0x31, 0xde, 0x42, 0x44, 0x84,
    0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x01, 0x01, 0x01,
  }
};

const unsigned char PROGMEM PLAYER_RIGHT_MASK_BITMAP[][36] = //12,18
{{
    0x00, 0x00, 0x18, 0xff, 0xfe, 0xfc, 0xfc, 0xfc,
    0xfe, 0xff, 0x18, 0x00, 0x00, 0x00, 0xdc, 0xfe,
    0xdf, 0x9f, 0x1f, 0xdf, 0xfe, 0xc2, 0x84, 0x08,
    0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01,
    0x01, 0x01, 0x01, 0x00,
  },
  {
    0x00, 0x00, 0x18, 0xff, 0xfe, 0xfc, 0xfc, 0xfc,
    0xfe, 0xff, 0x18, 0x00, 0xcc, 0xc2, 0xc2, 0x5e,
    0x7f, 0x1f, 0x1f, 0x3f, 0xde, 0xc2, 0xc4, 0x84,
    0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x01, 0x01, 0x01,
  }
};

